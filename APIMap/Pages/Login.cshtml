@page
@model UbicaTec.Pages.LoginModel
@{
}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital@1&display=swap" rel="stylesheet">
	<link rel="icon" href="~/Images/Icono/Icono144.png" type="image/x-icon">
	<link rel="stylesheet" href="~/Css/StyleLogin.css" />
	<title>Ubica-Tec</title>
</head>
<body class="login">
    <main class="login-container">
        <div class="title">
            <img src="~/Images/Diseños/sin-login.png" />
        </div>

        <div class="input-box">
            <i class="fa-solid fa-user"></i>
            <input type="text" id="username" required placeholder="Usuario" />
            <p class="error-message" id="username-error"></p>
        </div>
        <div class="input-box">
            <i class="fa-solid fa-lock"></i>
            <input type="password" id="password" required placeholder="Contraseña" />
            <p class="error-message" id="password-error"></p>
        </div>
        <p class="error-message" id="general-error"></p>
        <input type="button" id="btnLogin" class="btnLogin" value="Iniciar Sesión" />
    </main>


<script src="https://kit.fontawesome.com/81581fb069.js" crossorigin="anonymous"></script>
<script>
        document.getElementById("btnLogin").addEventListener("click", async () => {
            const username = document.getElementById("username").value.trim();
            const password = document.getElementById("password").value.trim();
            const usernameError = document.getElementById("username-error");
            const passwordError = document.getElementById("password-error");
            const generalError = document.getElementById("general-error");

            // Limpiar mensajes de error anteriores
            usernameError.textContent = "";
            passwordError.textContent = "";
            generalError.textContent = "";

            // Validación de campos vacíos
            let hasError = false;
            if (!username) {
                usernameError.textContent = "Por favor, ingresa tu usuario.";
                hasError = true;
            }
            if (!password) {
                passwordError.textContent = "Por favor, ingresa tu contraseña.";
                hasError = true;
            }
            if (hasError) {
                return;
            }

            // Enviar petición al servidor
            try {
                const response = await fetch("/api/Login", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ Username: username, Password: password }),
                });

                if (response.ok) {
                    const data = await response.json();
                    localStorage.setItem("token", data.token); // Guardar el token en localStorage
                    window.location.href = "/Admin/Index"; // Redirigir a la página protegida
                } else if (response.status === 401) {
                    generalError.textContent = "Usuario o contraseña incorrectos. Por favor, revísalos.";
                } else {
                    generalError.textContent = "Ocurrió un error inesperado. Intenta nuevamente.";
                }
            } catch (err) {
                generalError.textContent = "No hay conexión a internet. Por favor, verifica tu red.";
                console.error("Error de red:", err);
            }
        });
</script>
</body>
</html>